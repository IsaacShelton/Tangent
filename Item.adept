
enum Item (NONE, STAR, WING, GUN, CANNON, DOUBLEJUMP, LAST_ITEM)

func cycle(item *Item, reverse bool) {
    value usize = *item as usize
    
    unless reverse,
        *(item as *usize) = (++value == Item::LAST_ITEM as usize) ? Item::STAR as usize : value
    else
        *(item as *usize) = (--value == Item::NONE as usize) ? Item::LAST_ITEM as usize - 1 : value
}

func getNameForItem(item Item) String {
    if item == Item::STAR,       return "Blue Star"
    if item == Item::WING,       return "Wing"
    if item == Item::GUN,        return "Gun"
    if item == Item::CANNON,     return "Cannon"
    if item == Item::DOUBLEJUMP, return "Double Jump"
    return ""
}

func getInfoForItem(index usize) String {
    info String = getNameForItem(craftable[index]) + "\n\n"
    price Price = craftable_prices[index]
    
    resource_names *String = static String {
        "string", "slime", "wood", "feathers", "metal", "crystals"
    }
    
    repeat 6 {
        if price.get(idx) != 0, info = info + "% %\n" % price.get(idx) % resource_names[idx]
    }
    
    return info.commit()
}

func pickupItem(itemSpawn POD ItemSpawn) {
    pickupItem(itemSpawn.item,
        (&itemSpawn as *Region).getX() as float - camera_x,
        (&itemSpawn as *Region).getY() as float - camera_y)
}

func pickupItem(newItem Item, screenX, screenY float) {
    item = newItem
    item_screen_x = screenX
    item_screen_y = screenY
    cannon.rid()
}

enum Resource (NONE, STRING, SLIME, WOOD, FEATHER, METAL, CRYSTAL)
struct CollectedResource (resource Resource, x, y float)

func addCollectedResource(resource Resource, screenX, screenY float) {
    collected POD CollectedResource = undef
    collected.resource = resource
    collected.x = screenX
    collected.y = screenY
    collected_resources.add(collected)
}

struct Price (string, slime, wood, feathers, metal, crystals int) {
    func set(string, slime, wood, feathers, metal, crystals int) {
        this.string = string
        this.slime = slime
        this.wood = wood
        this.feathers = feathers
        this.metal = metal
        this.crystals = crystals
    }
    
    func get(index usize) int {
        if index == 0, return this.string
        if index == 1, return this.slime
        if index == 2, return this.wood
        if index == 3, return this.feathers
        if index == 4, return this.metal
        if index == 5, return this.crystals
        return 0
    }
}
