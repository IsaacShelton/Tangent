
import 'captain_prototype/captain.adept'

foreign stbi_failure_reason() *ubyte

func captTexture(filename String) CaptTexture {
    // HACK: Cause compiler calls __defer__ right before 'return'
    cstr *ubyte = filename.cstr()
    texture CaptTexture = captTexture(cstr)
    delete cstr
    
    if texture.id == 0 {
        printf('Error loading texture: %s\n', filename)
        printf('Reason: %s\n', stbi_failure_reason())
        printf('[errno %d %s]\n', errno, strerror(errno))
    }
    
    return texture
}

external errno int
foreign strerror(int) *ubyte

func captTexture(filename String, appoximate bool) CaptTexture {
    // HACK: Cause compiler calls __defer__ right before 'return'
    cstr *ubyte = filename.cstr()
    defer delete cstr
    
    errno = 0
    texture CaptTexture = captTexture(cstr, appoximate)
    
    if texture.id == 0 {
        printf('Error loading texture: %s\n', filename)
        printf('Reason: %s\n', stbi_failure_reason())
        printf('[errno %d %s]\n', errno, strerror(errno))
    }
    
    return texture
}
